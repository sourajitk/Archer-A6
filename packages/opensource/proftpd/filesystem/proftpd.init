#!/bin/sh /etc/rc.common
# Copyright (C) 2010 OpenWrt.org

START=71
NOLOCK=1

BIN=/usr/sbin/proftpd
HOME=/tmp/ftp
RUN_D=/var
PID_F=$RUN_D/proftpd.pid
RUN_USER=guest
RUN_GROUP=$RUN_USER

EXTRA_COMMANDS="suspend resume"
EXTRA_HELP="	suspend	Suspend the service
	resume	Resume the service"

PROFTPD_CFG_FILE="/etc/proftpd/proftpd.conf"
PROFTPD_CFG_ORIG="/etc/proftpd/proftpd.conf.orig"

EMMC_DEVICE=mmcblk0
DEVICE_PATH=/dev/$EMMC_DEVICE
EMMC_FTP=/tmp/ftp/F

boot() {
    if [ -f $PROFTPD_CFG_ORIG ]
    then
        cp -f $PROFTPD_CFG_ORIG $PROFTPD_CFG_FILE
    fi
}

ftp_add_emmc() {
	# Mount emmc for ftp
	if mount | grep "${DEVICE_PATH}" 1>/dev/null 2>&1; then
		echo "EMMC ${DEVICE_PATH} already be mounted" > /dev/null;
	else
		# try mount
		[ -d /mnt/mmcblk0 ] || (mkdir -p /mnt/mmcblk0 -m 0777)
		mount -t tntfs -o umask=0000,rw $DEVICE_PATH /mnt/mmcblk0 1>/dev/null 2>&1
		if [ $? -ne 0 ]; then
			echo "EMMC: mount /mnt/mmcblk0 failed!" > /dev/null;
			return 0;
		fi
	fi
	[ -d /tmp/ftp/F ] || (mkdir -p /tmp/ftp/F -m 0755)
	mount -O bind /mnt/mmcblk0 /tmp/ftp/F 1>/dev/null 2>&1
	if mount | grep "$EMMC_FTP" 1>/dev/null 2>&1; then
		local auth="$(uci_get usbshare.global.auth_all)"
		if [ x"$auth" == x"on" ]; then
			cat <<EOT >> $PROFTPD_CFG_FILE

<Directory /tmp/ftp/F>
    AllowGuestNetwork on
    <Limit DIRS READ>
        AllowUser admin,guest
    </Limit>
    <Limit WRITE>
        AllowUser admin
    </Limit>
    <Limit All>
        DenyAll
    </Limit>
</Directory>
EOT
		else
			cat <<EOT >> $PROFTPD_CFG_FILE

<Directory /tmp/ftp/F>
    AllowGuestNetwork on
    <Limit DIRS READ>
        AllowUser admin,guest
    </Limit>
    <Limit WRITE>
        AllowUser admin,guest
    </Limit>
    <Limit All>
        DenyAll
    </Limit>
</Directory>
EOT
		fi
	else
		echo "mount ftp error" > /dev/null
	fi
}

ftp_check_enable() {
	local ftp_en="$(uci_get usbshare.global.ftp)"
    local ftpex_en="$(uci_get usbshare.global.ftpex)"
	local mode="$(uci_get sysmode.sysmode.mode)"
	if [ x"$mode" == x"ap" ];then
		[ -n "$ftp_en" -a "$ftp_en" = "off" ] && return 1
	else
		[ -n "$ftp_en" -a "$ftp_en" = "off" ] && [ -n "$ftpex_en" -a "$ftpex_en" = "off" ] && return 1
	fi
    return 0
}

start() {
	local tpfile_support
	config_load "profile"
	config_get tpfile_support tpfile_diff tpfile_support "no"

	mount | grep /mnt/sd > /dev/null 2>&1 || return 1
    local tmpfile=`mktemp -t tmp.XXXXXX`
    local hostname="$(uci_get usbshare.global.svrname)"

    usbshare export ftp -o $tmpfile
    if [ $? -eq 0 ]
    then
        sed -e "s#|HOSTNAME|#$hostname#g" $PROFTPD_CFG_ORIG > $PROFTPD_CFG_FILE
        cat $tmpfile >> $PROFTPD_CFG_FILE
        if [ "$tpfile_support" = "yes" ]; then
			ftp_add_emmc
		fi
		rm -f $tmpfile
    else
        echo "usbshare export ftp failed. ProFTPD will start with default configuration."
        rm -f $tmpfile
    fi

	[ -d $HOME ] || ( mkdir -p $HOME && chown $RUN_USER:$RUN_GROUP $HOME )

	if [ -f $PID_F ] 
    then 
        # case stop function didn't kill process
        TMP_PID=$(cat $PID_F)
        kill -9 $TMP_PID 1>/dev/null 2>&1
        rm -f $PID_F
    fi

    ftp_check_enable || return 1

    $BIN
}

stop() {
	[ -f $PID_F ] && kill $(cat $PID_F)
}

reload() {
	[ -f $PID_F ] && kill -HUP $(cat $PID_F)
}

suspend() {
	echo "Suspending NOW"
	ftpshut now "Maintenance in progress"
}

resume() {
	[ -f /etc/shutmsg ] && {
		echo "Allowing sessions again"
		ftpshut -R > /dev/null
	}
}
